// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RepositoryPanes interactions after toggling the left segment in the computer view after toggling the left segment in the computer view toggles the left segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the left segment in the computer view toggles the left segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the left segment in the tablet view after toggling the left segment in the tablet view toggles the left segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the left segment in the tablet view toggles the left segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the right segment in the computer view after toggling the right segment in the computer view toggles the right segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the right segment in the computer view toggles the right segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the right segment in the tablet view after toggling the right segment in the tablet view toggles the right segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes interactions after toggling the right segment in the tablet view toggles the right segment (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes mobile view starting at the center segment the correct segment is open (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  mobileActiveSegmentInitially="center"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    mobileActiveSegmentInitially="center"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      mobileActiveSegmentInitially="center"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="center"
        mobileActiveSegmentInitially="center"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={false}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={true}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="active title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildCenter
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes mobile view starting at the left segment the correct segment is open (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  mobileActiveSegmentInitially="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    mobileActiveSegmentInitially="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      mobileActiveSegmentInitially="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileActiveSegmentInitially="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes mobile view starting at the right segment the correct segment is open (snapshot) 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  mobileActiveSegmentInitially="right"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    mobileActiveSegmentInitially="right"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      mobileActiveSegmentInitially="right"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="right"
        mobileActiveSegmentInitially="right"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={false}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={true}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="active title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildRight
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes with default options matches the snapshot 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes with left segment closed with right segment closed matches the snapshot 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={false}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={false}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={false}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={false}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={false}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={false}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes with left segment closed with right segment open matches the snapshot 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={false}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={false}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={false}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes with left segment open with right segment closed matches the snapshot 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={false}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={false}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={false}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;

exports[`RepositoryPanes with left segment open with right segment open matches the snapshot 1`] = `
<defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))
  childCenter={[Function]}
  childLeft={[Function]}
  childRight={[Function]}
  computerAndUpRightSegmentWidth={350}
  labelCenter="Center"
  labelLeft="Left"
  labelRight="Right"
  leftSegmentIsOpen={true}
  mobileActiveSegment="left"
  reservedHeaderHeight={10}
  rightSegmentIsOpen={true}
  tabletAndUpLeftSegmentWidth={250}
  tabletRightSegmentTabletHeight={250}
  transitionDuration={400}
>
  <withProps(withStateHandlers(StaticRepositoryPanes))
    childCenter={[Function]}
    childLeft={[Function]}
    childRight={[Function]}
    computerAndUpRightSegmentWidth={350}
    labelCenter="Center"
    labelLeft="Left"
    labelRight="Right"
    leftSegmentIsOpen={true}
    mobileActiveSegment="left"
    reservedHeaderHeight={10}
    rightSegmentIsOpen={true}
    tabletAndUpLeftSegmentWidth={250}
    tabletRightSegmentTabletHeight={250}
    transitionDuration={400}
  >
    <withStateHandlers(StaticRepositoryPanes)
      childCenter={[Function]}
      childLeft={[Function]}
      childRight={[Function]}
      computerAndUpRightSegmentWidth={350}
      labelCenter="Center"
      labelLeft="Left"
      labelRight="Right"
      leftSegmentIsOpen={true}
      mobileActiveSegment="left"
      reservedHeaderHeight={10}
      rightSegmentIsOpen={true}
      segmentCenter={[Function]}
      segmentCenterTablet={[Function]}
      segmentLeft={[Function]}
      segmentRight={[Function]}
      segmentRightTablet={[Function]}
      segmentsCenterRightTablet={[Function]}
      tabletAndUpLeftSegmentWidth={250}
      tabletRightSegmentTabletHeight={250}
      transitionDuration={400}
    >
      <StaticRepositoryPanes
        childCenter={[Function]}
        childLeft={[Function]}
        childRight={[Function]}
        computerAndUpRightSegmentWidth={350}
        labelCenter="Center"
        labelLeft="Left"
        labelRight="Right"
        leftSegmentIsOpen={true}
        mobileActiveSegment="left"
        mobileSwitchSegment={[Function]}
        reservedHeaderHeight={10}
        rightSegmentIsOpen={false}
        segmentCenter={[Function]}
        segmentCenterTablet={[Function]}
        segmentLeft={[Function]}
        segmentRight={[Function]}
        segmentRightTablet={[Function]}
        segmentsCenterRightTablet={[Function]}
        tabletAndUpLeftSegmentWidth={250}
        tabletRightSegmentTabletHeight={250}
        toggleLeftSegment={[Function]}
        toggleRightSegment={[Function]}
        transitionDuration={400}
      >
        <styled.div
          reservedHeaderHeight={10}
        >
          <div
            className="sc-bdVaJa fDPYUh"
          >
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bwzfXH iRUqln"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bwzfXH iRUqln sc-bdVaJa fDPYUh"
                >
                  <Styled(Accordion)
                    fluid={true}
                    styled={true}
                  >
                    <Accordion
                      className="sc-ifAKCX iPDvve"
                      fluid={true}
                      styled={true}
                    >
                      <AccordionAccordion
                        className="ui fluid styled sc-ifAKCX iPDvve"
                        exclusive={true}
                      >
                        <div
                          className="accordion ui fluid styled sc-ifAKCX iPDvve"
                        >
                          <AccordionTitle
                            active={true}
                            handlerid="mobileLeftSegmentSwitcher"
                            onClick={[Function]}
                            segment="left"
                          >
                            <div
                              className="active title"
                              handlerid="mobileLeftSegmentSwitcher"
                              onClick={[Function]}
                              segment="left"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Left
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={true}
                          >
                            <div
                              className="content active"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={true}
                              >
                                <ChildLeft
                                  className="slide up visible transition"
                                  style={
                                    Object {
                                      "animationDuration": undefined,
                                    }
                                  }
                                />
                              </Transition>
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileCenterSegmentSwitcher"
                            onClick={[Function]}
                            segment="center"
                          >
                            <div
                              className="title"
                              handlerid="mobileCenterSegmentSwitcher"
                              onClick={[Function]}
                              segment="center"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Center
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                          <AccordionTitle
                            active={false}
                            handlerid="mobileRightSegmentSwitcher"
                            onClick={[Function]}
                            segment="right"
                          >
                            <div
                              className="title"
                              handlerid="mobileRightSegmentSwitcher"
                              onClick={[Function]}
                              segment="right"
                            >
                              <Icon
                                as="i"
                                name="dropdown"
                              >
                                <i
                                  aria-hidden="true"
                                  className="dropdown icon"
                                />
                              </Icon>
                              Right
                            </div>
                          </AccordionTitle>
                          <AccordionContent
                            active={false}
                          >
                            <div
                              className="content"
                            >
                              <Transition
                                animation="slide up"
                                duration={400}
                                mountOnShow={true}
                                transitionOnMount={false}
                                unmountOnHide={false}
                                visible={false}
                              />
                            </div>
                          </AccordionContent>
                        </div>
                      </AccordionAccordion>
                    </Accordion>
                  </Styled(Accordion)>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-htpNat fmMgce"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-htpNat fmMgce sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="tabletLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "left": "15.625em",
                      }
                    }
                  >
                    <div
                      className="sc-htoDjs eUUzIR"
                      style={
                        Object {
                          "left": "15.625em",
                        }
                      }
                    >
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        rightSegmentIsOpen={false}
                        style={
                          Object {
                            "height": "0em",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-iwsKbI cjctfp"
                          style={
                            Object {
                              "height": "0em",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildRight />
                        </div>
                      </styled.div>
                      <SegmentToggler
                        attachedAt="bottom"
                        handlerid="tabletRightSegmentToggler"
                        iconClosed="chevron down"
                        iconOpen="chevron up"
                        isOpen={false}
                        label="Right"
                        toggle={[Function]}
                      >
                        <Button
                          active={false}
                          as="button"
                          attached="bottom"
                          basic={true}
                          onClick={[Function]}
                          size="mini"
                          style={
                            Object {
                              "boxSizing": "border-box",
                              "padding": "2px 0",
                            }
                          }
                        >
                          <div
                            className="ui mini basic bottom attached button"
                            onClick={[Function]}
                            role="button"
                            style={
                              Object {
                                "boxSizing": "border-box",
                                "padding": "2px 0",
                              }
                            }
                            tabIndex={0}
                          >
                            <div
                              style={
                                Object {
                                  "position": "relative",
                                }
                              }
                            >
                              <Icon
                                as="i"
                                name="chevron down"
                              >
                                <i
                                  aria-hidden="true"
                                  className="chevron down icon"
                                />
                              </Icon>
                              <span
                                style={
                                  Object {
                                    "padding": "2px",
                                  }
                                }
                              >
                                Right
                              </span>
                            </div>
                          </div>
                        </Button>
                      </SegmentToggler>
                      <styled.div
                        leftSegmentWidthEM={15.625}
                        style={
                          Object {
                            "height": "calc(100% - 0em)",
                            "left": "15.625em",
                          }
                        }
                        transitionDuration={400}
                      >
                        <div
                          className="sc-dnqmqq cjIEIo"
                          style={
                            Object {
                              "height": "calc(100% - 0em)",
                              "left": "15.625em",
                            }
                          }
                        >
                          <ChildCenter />
                        </div>
                      </styled.div>
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
            <Styled(styled.div)
              reservedHeaderHeight={10}
            >
              <styled.div
                className="sc-bxivhb iPuIpM"
                reservedHeaderHeight={10}
              >
                <div
                  className="sc-bxivhb iPuIpM sc-bdVaJa fDPYUh"
                >
                  <styled.div
                    style={
                      Object {
                        "width": "15.625em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-EHOje iGNQsv"
                      style={
                        Object {
                          "width": "15.625em",
                        }
                      }
                    >
                      <ChildLeft />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="right"
                    handlerid="computerAndUpLeftSegmentToggler"
                    iconClosed="chevron right"
                    iconOpen="chevron left"
                    isOpen={true}
                    label="Left"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={true}
                      as="button"
                      attached="right"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini active basic right attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Left
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    leftSegmentWidthEM={15.625}
                    rightSegmentWidthEM={0}
                    style={
                      Object {
                        "left": "15.625em",
                        "right": "0em",
                      }
                    }
                  >
                    <div
                      className="sc-bZQynM jLiXrQ"
                      style={
                        Object {
                          "left": "15.625em",
                          "right": "0em",
                        }
                      }
                    >
                      <ChildCenter />
                    </div>
                  </styled.div>
                  <SegmentToggler
                    attachedAt="left"
                    handlerid="computerAndUpRightSegmentToggler"
                    iconClosed="chevron left"
                    iconOpen="chevron right"
                    isOpen={false}
                    label="Right"
                    toggle={[Function]}
                    vertical={true}
                  >
                    <Button
                      active={false}
                      as="button"
                      attached="left"
                      basic={true}
                      onClick={[Function]}
                      size="mini"
                      style={
                        Object {
                          "boxSizing": "border-box",
                          "padding": "2px 0",
                        }
                      }
                    >
                      <div
                        className="ui mini basic left attached button"
                        onClick={[Function]}
                        role="button"
                        style={
                          Object {
                            "boxSizing": "border-box",
                            "padding": "2px 0",
                          }
                        }
                        tabIndex={0}
                      >
                        <div
                          style={
                            Object {
                              "position": "relative",
                            }
                          }
                        >
                          <Icon
                            as="i"
                            name="chevron left"
                          >
                            <i
                              aria-hidden="true"
                              className="chevron left icon"
                            />
                          </Icon>
                          <div
                            style={
                              Object {
                                "marginTop": "1ex",
                                "padding": "2px",
                                "writingMode": "vertical-lr",
                              }
                            }
                          >
                            Right
                          </div>
                        </div>
                      </div>
                    </Button>
                  </SegmentToggler>
                  <styled.div
                    style={
                      Object {
                        "width": "0em",
                      }
                    }
                    transitionDuration={400}
                  >
                    <div
                      className="sc-gzVnrw ecwBdL"
                      style={
                        Object {
                          "width": "0em",
                        }
                      }
                    >
                      <ChildRight />
                    </div>
                  </styled.div>
                </div>
              </styled.div>
            </Styled(styled.div)>
          </div>
        </styled.div>
      </StaticRepositoryPanes>
    </withStateHandlers(StaticRepositoryPanes)>
  </withProps(withStateHandlers(StaticRepositoryPanes))>
</defaultProps(withProps(withStateHandlers(StaticRepositoryPanes)))>
`;
